<title>Scotiaworld | Compare</title>
<link href="https://unpkg.com/bootstrap-table@1.15.4/dist/bootstrap-table.min.css" rel="stylesheet">

<script src="https://unpkg.com/bootstrap-table@1.15.4/dist/bootstrap-table.min.js"></script>

<!-- bread-crumb start here -->
<div class="bread-crumb">
	<img src="/main_theme/images/banner-top.jpg" class="img-responsive" alt="banner-top" title="banner-top">
	<div class="container">
		<div class="matter">
			<h2>COMPARE</h2>
			<ul class="list-inline">
				<li>
					<a href="/">Home</a>
				</li>
				<li>
					<a href="#">Current Page</a>
				</li>
			</ul>
		</div>
	</div>
</div>
<!-- bread-crumb end here -->

<!-- coures start here -->
<div class="coures">
	<div class="container">
		<div class="row">
			{{!-- <div class="col-sm-3 col-xs-12 hidden-xs">
				<div class="left">
					<h4>{{best}}</h4>
					<div class="popular">
						{{#each data }}
						<a href="/detail/{{this.Institution.name}}/{{this.name}}/{{this.id}}">
							<div class="box">
								<img style="height:150px" width="100%" src="/uploads/{{this.path}}"
									class="img-thumbnail" alt="img" title="img" />
								<p><strong>{{this.Institution.name}}</strong></p>
								<p>{{this.name}}</p>
								<span>{{this.fee}}</span>
							</div>
						</a>
						{{/each}}
						<hr>
						<h5 style="text-align: center;"><a href="/popular-Courses">View more ...</a></h5>
					</div>
				</div>
			</div> --}}
			<div class="col-sm-12 col-xs-12">

				<div class="col-sm-12 sort">
					<h3 style="text-align:center">Compare</h3>
				</div>
				<div ng-controller="school" class="col-sm-12 sort">
					<div class="row">

						<div class="col-lg-2"></div>
						<div class="col-lg-8">
							<select id="cboSearchType" class="form-control">
								<option value="0">Compare Fees</option>
								<option value="2">Seek Professional Advice</option>
							</select>
						</div>
						<div class="col-lg-2"></div>
					</div>
					<hr>
					<div class="row feeCompareContainer">
						<div class="col-lg-3">
							<select id="uni1" class="form-control">
								<option value="0">--Institution 1--</option>

								<option value="{[{u.uni.id}]}" ng-repeat="u in menu">{[{u.uni.name}]}</option>

							</select>
						</div>
						<div class="col-lg-4">
							<select id="uni2" class="form-control">
								<option value="0">--Institution 2--</option>
								<option value="{[{u.uni.id}]}" ng-repeat="u in menu">{[{u.uni.name}]}</option>
							</select>
						</div>
						<div class="col-lg-4">
							<select id="faculty" class="form-control">
								<option value="0">--Select Faculty--</option>
								<option value="0">All</option>
								<option value="{[{u.id}]}" ng-repeat="u in drop.faculty">{[{u.name}]}</option>
							</select>
						</div>
						<div class="col-lg-1">
							<button id="btnSearch" class="btn btn-primary"> <i class="fa fa-search"></i></button>
						</div>
					</div>
					<div class="col-lg-12 spinner"><img class="pull-right" style="height: 20px; width:20px"
							src="/loader.gif" />
					</div>
				</div>
				<div class="row enquiryContainer">
					<div class="col-lg-3"></div>
					<div class="col-lg-6 sort">
						<img class="img-responsive" src="/enquiry.jpg" />
						<form id="enquiryForm" method="POST">
							<hr>
							<div id="alertContainer">

							</div>
							<div class="form-group">
								<label>Full name:</label>
								<input required name="name" class="form-control" />
							</div>
							<div class="form-group">
								<label>Email:</label>
								<input type="email" required name="email" class="form-control" />
							</div>
							<div class="form-group">
								<label>Phone:</label>
								<input type="tel" name="phone" class="form-control" />
							</div>
							<div class="form-group">
								<label>Address:</label>
								<input name="address" class="form-control" />
							</div>
							<div class="form-group">
								<label>Message:</label>
								<textarea required name="message" class="form-control" /></textarea>
							</div>
							<hr>
							<button id="btnEnquiry" type="submit" class="btn btn-primary">Submit</button>
							<button type="reset" class="btn btn-default">Reset</button> <img
								style="width: 20px; heigth:20px" id="enquirySpinner" src="/loader.gif" />
						</form>
					</div>
					<div class="col-lg-3"></div>
				</div>

				<div class="row feeCompareContainer">
					<div class="col-lg-6">
						<div class="panel panel-primary">
							<div class="panel-heading">
								<strong id="schoolName1"></strong>
							</div>
							<div class="panel-body">
								<div class="form-group has-feedback has-search">
									<span class="glyphicon glyphicon-search form-control-feedback"></span>
									<input type="text" placeholder="Search course names, faculties and fees"
										id="firstSearchbar" class="form-control" placeholder="Search">
								</div>
								<table class="table table-striped">
									<thead>
										<tr>
											<th scope="col">Course</th>
											<th scope="col">Faculty</th>
											<th scope="col">Fee</th>
											<th scope="col">Scholarship</th>
										</tr>
									</thead>
									<tbody id="course1Wrapper">

									</tbody>
								</table>

							</div>
							<div class="panel-footer">
								<button id="btnBack" type="button">
									<< Back</button> <button id="btnNext" class="pull-right" type="button">Next >>
								</button>
							</div>
							<div>
								<h5 id="pageOneCaption" style="padding: 10px;" class="pull-right"> </h5>
							</div>
						</div>

					</div>

					<div class="col-lg-6">
						<div class="panel panel-primary">
							<div class="panel-heading">
								<strong id="schoolName2"></strong>
							</div>
							<div class="panel-body">
								<div class="form-group has-feedback has-search">
									<span class="glyphicon glyphicon-search form-control-feedback"></span>
									<input id="secondSearchbar" placeholder="Search course names, faculties and fees"
										type="text" class="form-control" placeholder="Search">
								</div>
								<table style="" class="table table-striped">
									<thead>
										<tr>
											<th scope="col">Course</th>
											<th scope="col">Faculty</th>
											<th scope="col">Fee</th>
											<th scope="col">Scholarship</th>
										</tr>
									</thead>
									<tbody style="min-height: 400px;" id="course2Wrapper">

									</tbody>
								</table>

							</div>
							<div class="panel-footer">
								<button id="btnBack2" type="button">
									<< Back</button> <button id="btnNext2" class="pull-right" type="button">Next >>
								</button>
							</div>
							<div>
								<h5 id="pageTwoCaption" style="padding: 10px;" class="pull-right"> </h5>
							</div>
						</div>

					</div>



					<hr>
				</div>

			</div>
		</div>
	</div>
	<script>
		$(function () {
			const ten = 10;
			let enquiryContainer = $(".enquiryContainer");
			let feeCompareContainer = $(".feeCompareContainer");
			let btnSearch = document.getElementById("btnSearch");
			let cboUni1 = $("#uni1");
			let cboUni2 = $("#uni2");
			let cboFaculty = $("#faculty");
			let wrapper1 = $("#course1Wrapper");
			let wrapper2 = $("#course2Wrapper");
			let name1 = $("#schoolName1");
			let name2 = $("#schoolName2");
			let searchSpinner = $(".spinner");
			let cboSearchType = $("#cboSearchType");
			let btnBack = $("#btnBack");
			let btnNext = $("#btnNext");
			let secondSearchBar = $("#secondSearchbar");
			let firstSearchBar = $("#firstSearchbar");
			let pageOneCaption = $("#pageOneCaption");
			let pageTwoCaption = $("#pageTwoCaption");

			let btnBack2 = $("#btnBack2");
			let btnNext2 = $("#btnNext2");
			let tableOneDataStore = [];
			let tableTwoDataStore = [];
			let allData = [];
			let renderData = [];
			let allData2 = [];
			let renderData2 = [];
			let totalData1 = 0;
			let totalData2 = 0;
			let paginationObject = {
				limit: ten,
				nextPage: 0,
				nextPage2: 0,
				total: 0,
				total2: 0,
				url: "/compareFee",
				url2: "/compareFee"
			}

			var limit1, limit2, pageNext1, pagePrevious1, pageNext2, pagePrevious2;

			function initializeParams() {
				limit1 = ten;
				limit2 = ten;
				pageNext1 = ten;
				pageNext2 = ten;
				pagePrevious1 = 0;
				pagePrevious2 = 0
			}

			function paginationCaption(currentPage, totalPage, container, limit) {
				return container.empty().append(`<strong>page ${Math.floor(currentPage / limit)} of ${Math.floor(totalPage / limit)}</strong>`)
			}
			firstSearchBar.keyup(function () {

				let searchString = $(this).val().toUpperCase().trim();

				renderData = [];

				tableOneDataStore.forEach(data => {

					//console.log(`original name: ${convertedName} name searched: ${searchString}`)
					if (data.name.toUpperCase().startsWith(searchString) || data.StudyArea.name.toUpperCase().startsWith(searchString) || data.fee.substring(1).startsWith(searchString) || data.scholarshipAmount.startsWith(searchString)) {
						renderData.push(data);
					}
				})
				//updates alldata with renderData incase of pagination
				allData = renderData;
				renderData = renderData.slice(0, limit1)
				wrapper1.empty();
				if (renderData.length === 0) {
					wrapper1.append(template({ hasData: true, data: undefined }));
				}
				renderData.forEach(course => {
					wrapper1.append(template({ hasData: true, data: course }));
				})

			})
			secondSearchBar.keyup(function () {

				let searchString = $(this).val().toUpperCase().trim();

				renderData2 = [];
				tableTwoDataStore.forEach(data => {

					//console.log(`original name: ${convertedName} name searched: ${searchString}`)
					if (data.name.toUpperCase().startsWith(searchString) || data.StudyArea.name.toUpperCase().startsWith(searchString) || data.fee.substring(1).startsWith(searchString) || data.scholarshipAmount.startsWith(searchString)) {
						renderData2.push(data);
					}
				})
				//updates alldata with renderData incase of pagination
				allData2 = renderData2;
				renderData2 = renderData2.slice(0, limit2)

				wrapper2.empty();
				if (renderData2.length === 0) {
					wrapper2.append(template({ hasData: true, data: undefined }));
				}
				renderData2.forEach(course => {
					wrapper2.append(template({ hasData: true, data: course }));
				})
			})
			function template(obj) {

				if (typeof obj === "object") {

					if ("hasData" in obj && obj.hasData && (obj.data !== undefined)) {
						console.log("A");
						return (`<tr>
						<td>${obj.data.name}</td>
						<td>${obj.data.StudyArea.name}</td>
						<td>${obj.data.fee}</td>
						<td>£ ${obj.data.scholarshipAmount}</td>
						</tr>`)
					} else if (("data" in obj) && (obj.data === undefined) && (obj.hasData === true)) {
						console.log("B");
						return (`<tr>
							<td></td>
							<td></td>
							<td><strong>No Result Found</strong></td>
							<td></td>
						</tr>`)
					} else {
						console.log("C " + "hasData" in obj);
						return (`<tr>
							<td></td>
							<td></td>
							<td><img style="width:20px; length:20px" src="/loader.gif" /></td>
							<td></td>
						</tr>`)
					}

				} else {
					console.log("Argument requires an object")
				}
			}
			btnBack.click(function (e) {
				if (pagePrevious1 == 0) {
					$(this).attr("disabled", true);
				}
				else {
					$(this).attr("disabled", false);
					pageNext1 -= limit1;
					pagePrevious1 -= limit1;
					renderData = [];
					renderData = allData.slice(pagePrevious1, pageNext1);
					wrapper1.empty();
					renderData.forEach(course => {
						wrapper1.append(template({ hasData: true, data: course }));
					})

					paginationControl();
					paginationCaption((pageNext1), totalData1, pageOneCaption, limit1);
				}
			})
			btnBack2.click(function (e) {
				if (pagePrevious2 == 0) {
					$(this).attr("disabled", true);
				}
				else {
					$(this).attr("disabled", false);
					pageNext2 -= limit2;
					pagePrevious2 -= limit2;
					renderData2 = [];
					renderData2 = allData2.slice(pagePrevious2, pageNext2);
					wrapper2.empty();
					renderData2.forEach(course => {
						wrapper2.append(template({ hasData: true, data: course }));
					})
					paginationControl();
					paginationCaption((pageNext2), totalData2, pageTwoCaption, limit2);

				}
			})

			btnNext.click(function (e) {
				pageNext1 += limit1;
				pagePrevious1 += limit1;
				renderData = [];
				renderData = allData.slice(pagePrevious1, pageNext1);
				wrapper1.empty();
				renderData.forEach(course => {
					wrapper1.append(template({ hasData: true, data: course }));
				})

				paginationControl();
				paginationCaption(pageNext1, totalData1, pageOneCaption, limit1);


			})
			btnNext2.click(function (e) {

				pageNext2 += limit2;
				pagePrevious2 += limit2;
				renderData2 = [];
				renderData2 = allData2.slice(pagePrevious2, pageNext2);
				wrapper2.empty();
				renderData2.forEach(course => {
					wrapper2.append(template({ hasData: true, data: course }));
				});
				//adding the first parameter as pagePrevious initial value is zero 
				paginationControl();
				paginationCaption(pageNext2, totalData2, pageTwoCaption, limit2);
			})
			function paginationControl() {
				//alert(totalData2)
				if (totalData2 < (pageNext2 - 1))
					btnNext2.attr("disabled", true);
				else
					btnNext2.attr("disabled", false);

				if (totalData1 < (pageNext1 - 1))
					btnNext.attr("disabled", true);
				else
					btnNext.attr("disabled", false);

				if (pagePrevious2 <= 0)
					btnBack2.attr("disabled", true);

				else
					btnBack2.attr("disabled", false);


				if (pagePrevious1 <= 0)
					btnBack.attr("disabled", true);
				else
					btnBack.attr("disabled", false);
			}
			displayContainer(cboSearchType);
			cboSearchType.change(function () {
				displayContainer($(this));
			})
			function displayContainer(input) {
				let val = input.children("option:selected").val();
				if (val == 0) {
					feeCompareContainer.show();
					enquiryContainer.hide();
				} else if (val == 2) {
					feeCompareContainer.hide();
					enquiryContainer.show();
				}
			}
			searchSpinner.hide();

			function getIputs() {
				return {
					uni1: cboUni1,
					uni2: cboUni2,
					faculty: cboFaculty
				}
			}



			function ajaxRequest(uni1, uni2, faculty) {

				let firstUniText = uni1.find(":selected").text().trim();
				let firstUniVal = uni1.val().trim();

				let secondUniText = uni2.find(":selected").text().trim();
				let secondUniVal = uni2.val().trim();

				let facultyText = faculty.find(":selected").text().trim();
				let facultyVal = faculty.val().trim();

				//alert(uni2.text().trim())
				searchSpinner.show();
				if (firstUniVal != 0)
					name1.empty().append(firstUniText)
				else
					name1.empty().append("All Institutions")
				if (secondUniVal != 0)
					name2.empty().append(secondUniText)
				else
					name2.empty().append("All Institutions");

				wrapper1.empty().append(template({}))
				wrapper2.empty().append(template({}))

				$.ajax({
					type: "POST",
					url: "/compareFee",
					data: { institutionId1: firstUniVal, institutionId2: secondUniVal, facultyId: facultyVal },
					dataType: "json",
					success: function (result) {
						initializeParams();
						searchSpinner.hide();
						let course1 = result.data.course1;
						let course2 = result.data.course2;
						allData = tableOneDataStore = course1;
						allData2 = tableTwoDataStore = course2;

						renderData = allData.slice(0, limit1);
						renderData2 = allData2.slice(0, limit2);

						totalData1 = course1.length;
						totalData2 = course2.length;
						paginationControl();

						wrapper1.empty();
						wrapper2.empty();

						if (course1.length == 0)
							wrapper1.append(template({ hasData: false }))

						if (course2.length == 0)
							wrapper2.append(template({ hasData: false }))

						renderData.forEach(course => {
							wrapper1.append(template({ hasData: true, data: course }));
						})
						renderData2.forEach(course => {
							wrapper2.append(template({ hasData: true, data: course }));
						})
						paginationCaption(limit1, totalData1, pageOneCaption, limit1);
						paginationCaption(limit2, totalData2, pageTwoCaption, limit2);
					},
					error: function (er) {

					}
				});
			}
			ajaxRequest(getIputs().uni1, getIputs().uni2, getIputs().faculty);
			btnSearch.addEventListener("click", function () {
				ajaxRequest(getIputs().uni1, getIputs().uni2, getIputs().faculty);
			});
			cboUni1.change(function () {
				ajaxRequest(getIputs().uni1, getIputs().uni2, getIputs().faculty);
			})
			cboUni2.change(function () {
				ajaxRequest(getIputs().uni1, getIputs().uni2, getIputs().faculty);
			})

			function alertBoxTemplate(message, isError) {
				let classVal = isError ? "alert alert-danger" : "alert alert-success";
				$("#alertContainer").empty().html(`<div class="${classVal}">
									${message}
								</div>`).fadeOut(16000);
			}
			let myform = $("#enquiryForm");
			let enquirySpinner = $("#enquirySpinner");
			let btnEnquiry = $("#btnEnquiry");

			enquirySpinner.hide();
			myform.on('submit', function (e) {
				btnEnquiry.attr("disabled", true);
				enquirySpinner.show();
				e.preventDefault();
				$.ajax({
					type: 'post',
					url: '/enquiry/add',
					data: myform.serialize(),
					success: function (response) {
						btnEnquiry.attr("disabled", false);
						if (!response.error)
							alertBoxTemplate("Thanks for your enquiry, we will get back to you in 2 working days ", false);
						else
							alertBoxTemplate("Form submission was not successful, please try again later.", true);
						enquirySpinner.hide();
					},
					error: function (jqXHR, exception) {
						btnEnquiry.attr("disabled", false);
						alertBoxTemplate("Form submission was not successful, please try again later.", true);
						enquirySpinner.hide();
					}
				});


			})


		});
	</script>
	<!-- coures end here -->


	<!-- coures end here -->